import { createContext, useContext, useEffect, useState } from 'react';
import { useRef } from 'react';

export const TourContext = createContext();

const TourProvider = ({ children }) => {
  const [tourIsActive, setTourIsActive] = useState(false);
  const [isHeaderShow, setIsHeaderShow] = useState(true);

  const ref0 = useRef(null);
  const ref1 = useRef(null);
  const ref2 = useRef(null);
  const ref3 = useRef(null);
  const ref4 = useRef(null);
  const ref5 = useRef(null);
  const ref6 = useRef(null);
  const ref7 = useRef(null);
  const ref8 = useRef(null);
  const ref9 = useRef(null);
  const ref10 = useRef(null);
  const ref11 = useRef(null);
  const ref12 = useRef(null);
  const ref13 = useRef(null);
  const ref14 = useRef(null);
  const ref15 = useRef(null);

  const steps = [
    {
      title: 'Informaci√≥n de la landing',
      description: (
        <p>
          He consolidado en esta landing la informaci√≥n que se encuentra
          actualmente dispersa entre filadd.com y filadd.com/academia. Ambas
          p√°ginas explican aspectos fundamentales del servicio, y es crucial que
          los usuarios puedan acceder a esta informaci√≥n desde el Inicio. La
          landing de la Academia debe estar destinada a proporcionar detalles
          m√°s exclusivos y detallados sobre los cursos.
        </p>
      ),
      target: () => ref0.current,
    },
    {
      title: 'Selecci√≥n del pa√≠s',
      description: (
        <p>
          La seleci√≥n del pa√≠s deber√≠a hacerse una sola vez y de forma general,
          no dentro de las secciones de la p√°gina.
        </p>
      ),
      target: () => ref1.current,
    },
    {
      title: 'Header',
      description: (
        <p>
          El Header debe poseer un link a las distintas p√°ginas y hasta dos CTA
          que se consideren los m√°s importantes (en este caso
          &quot;Registrarme&quot; e &quot;Ingresar&quot;). Van a notar que
          cuando est√°n arriba del todo, estos dos CTA se reemplazan por un link
          a &quot;Filad Profesional&quot;, esto es as√≠ porque en el Hero se
          repiten esos CTA y de otra manera ser√≠amos muy redundantes.
          <br />
          Los links siempre deben ser visibles a menos que no quepan en el
          viewport y entonces deben ser mudados a un sidebar. Ser√≠a muy
          importante tratar de unificar el dise√±o de todas estas p√°ginas
          (Academia, Nosotros, Preguntas Frecuentes, incluso Pol√≠ticas de
          Privacidad y Aviso de privacidad) con en dise√±o y estructura del
          Inicio (al menos mismo Header y mismo Footer), y que no se linkee a
          aplicaciones de terceros como Notion. Esto va a permitir presentar al
          servicio como algo m√°s homog√©neo y s√≥lido, lo que se traduce en mayor
          confianza para crearse una cuenta y pagar por el servicio. <br />
          Las p√°ginas que tengan mucho copywrite y requieran actualizarse
          continuamente (como Preguntas Frecuentes) se pueden desarrollar con la
          misma tecnolog√≠a que el Inicio y que los copywriters manejen su
          contenido mediante un CMS.
        </p>
      ),
      target: () => ref2.current,
    },
    {
      title: 'Hero',
      description: (
        <p>
          Existen varias razones por las que no aplicar√≠a en el Hero (ni en las
          p√°ginas en general) los mismos dise√±os con personajes propios de las
          publicidades de Filadd. La m√°s importante es la necesidad de una
          vigencia m√°s alta que la vigencia de las publicidades. Respecto al
          Hero me parece excelente la idea actual de que comprenda una altura
          reducida del viewport para dar de entrada una utilidad (secci√≥n
          siguiente de b√∫squeda).
        </p>
      ),
      target: () => ref3.current,
    },
    {
      title: 'Contador de pasos',
      description: (
        <p>
          Tener un contador de pasos da m√°s dinamismo y claridad a la b√∫squeda.
          Siendo esta la &quot;secci√≥n estrella&quot; (pues ya le est√° dando una
          funcionalidad a los nuevos usuarios), hay que darle un poco de mimo.
        </p>
      ),
      target: () => ref4.current,
    },
    {
      title: 'B√∫squeda',
      description: (
        <p>
          Lo m√°s intuitivo es dar un ejemplo de b√∫squeda de forma directa en el
          placeholder. Me parece lo mejor que el ejemplo sea una universidad del
          interior, para dejar claro lo profunda que puede ser la b√∫squeda.
        </p>
      ),
      target: () => ref5.current,
    },
    {
      title: 'Lista de opciones',
      description: (
        <p>
          Si la informaci√≥n de una lista no comprende im√°genes o informaci√≥n m√°s
          all√° de un t√≠tulo y una descripci√≥n, no se justifica la utilizaci√≥n de
          tarjetas y los items en l√≠nea son m√°s que suficientes. No utilizar√≠a
          un orden alfab√©tico sino ponderado en la lista de universidades (las
          m√°s importantes o m√°s buscadas ir√≠an primero). Tambi√©n se puede tener
          en cuenta la ubicaci√≥n del usuario (posterior a solicitar permiso)
          para esta ponderaci√≥n.
          <br />
          Es importante tambi√©n reducir la cantidad de items que pueden verse de
          primera mano, aplicando el bot√≥n de ‚ÄúVer todo‚Äù para ampliar la lista.
        </p>
      ),
      target: () => ref6.current,
    },
    {
      title: 'Estad√≠sticas',
      description: (
        <p>
          A esta informaci√≥n la traje desde la p√°gina actual &quot;Sobre
          nosotros&quot;. Me pareci√≥ importante que est√© aqu√≠ como parte de la
          narrativa.
        </p>
      ),
      target: () => ref7.current,
    },
    {
      title: 'Secci√≥n',
      description: (
        <p>
          Para generar esta secci√≥n reun√≠ la informaci√≥n de varias p√°ginas
          actuales, incluso algunas a las que no se puede acceder sin haber
          creado una cuenta. Es muy importante que quede claro, de la forma
          m√°s √≠ntegra posible, c√≥mo funciona la aplicaci√≥n en esta p√°gina de
          Inicio.
        </p>
      ),
      target: () => ref8.current,
    },
    {
      title: 'Fotos',
      description: (
        <p>
          No soy fan de las fotograf√≠as de stock, pero es importante tener fotos
          en la landing y esta es la secci√≥n ideal para eso. Se puede hacer una
          producci√≥n propia o comprar una serie de fotograf√≠as coherentes entre
          s√≠ que parezcan m√°s naturales.
          <br />
          En la versi√≥n m√≥vil las im√°genes directamente no aparecen, es una
          pr√°ctica com√∫n para mejorar el UX.
        </p>
      ),
      target: () => ref9.current,
    },
    {
      title: 'Asterisco',
      description: (
        <p>
          Ac√° la flashi√© un poco, pero me parece importante dejar claro que
          ser Premium no involucra tener acceso directo a todos los cursos, sino
          que hay que pagar por cada uno de ellos. Esta es una manera de
          &quot;decirlo sin decirlo&quot;, pero se puede optar por otras formas.
        </p>
      ),
      target: () => ref10.current,
    },
    {
      title: 'Testimonios',
      description: (
        <p>
          Es muy importante que esta secci√≥n aparezca directamente luego de la
          secci√≥n sobre &quot;C√≥mo funciona Filadd&quot; para darle legitimidad
          a la misma. Reun√≠ los testimonios que ahora tienen en las distintas
          p√°ginas y los complet√© un poco artificalmente. Ser√≠a necesario buscar
          m√°s testimonios reales, con links a los perfiles, y que todos tengan
          la info completa sobre la universidad y carrera de la persona.
        </p>
      ),
      target: () => ref11.current,
    },
    {
      title: 'Conversi√≥n',
      description: (
        <p>
          Toda la estructura de la p√°gina est√° dise√±ada para dirigir a los
          usuarios hacia esta secci√≥n de conversi√≥n. La mayor√≠a de las
          conversiones ocurren despu√©s de leer testimonios, por lo que este es
          el lugar estrat√©gico.
          <br />
          Te√≥ricamente esta deber√≠a ser la √∫ltima secci√≥n antes de que aparezca
          el Footer, as√≠ el usuario no se dispersa y no se pierde su conversi√≥n.
          Sin embargo, se pueden hacer algunos tests A-B para evaluar c√≥mo
          rinden las secciones &quot;Filadd Profesional&quot; (como bien aparece
          en este caso), &quot;Top cursos de la Academia&quot; e incluso
          &quot;Planes disponibles&quot;. Todas estas son secciones
          &quot;extra&quot; que colocadas antes de la conversi√≥n cortan un poco
          con la narrativa persuasiva, por lo que deber√≠an aparecer siempre
          despu√©s, justo antes del Footer.
        </p>
      ),
      target: () => ref12.current,
    },
    {
      title: 'Footer',
      description: (
        <p>
          Al igual que el Header, el Footer debe proporcionar un link a las
          distintas p√°ginas para poder seguir navegando desde aqu√≠ sin tener que
          volver hacia arriba.
        </p>
      ),
      target: () => ref13.current,
    },
    {
      title: 'Incutex',
      description: (
        <p>
          Yo tambi√©n pas√© por aqu√≠ üëãüòÖ
        </p>
      ),
      target: () => ref14.current,
    },
    {
      title: '¬°Nos vemos!',
      description: (
        <p>
          Y hasta aqu√≠ por ahora. Como les cont√©, tengo un pu√±ado m√°s de cosas
          que me gustar√≠a compartirles. ¬°Espero verlos pronto!
        </p>
      ),
      target: () => ref15.current,
    },
  ];
  steps.forEach((step, index) => {
    step.nextButtonProps = {
      children: index !== steps.length - 1 ? 'Siguiente' : 'Finalizar',
    };
    step.prevButtonProps = {
      children: 'Atr√°s',
    };
  });

  const startTour = () => {
    setIsHeaderShow(true);
    setTimeout(() => {
      setTourIsActive(true);
    }, 200);
  };

  useEffect(() => {
    if (tourIsActive) {
      document.documentElement.style.overflow = 'hidden';
    } else {
      document.documentElement.style.overflow = 'auto';
    }
  }, [tourIsActive]);

  //// COMPONENT
  return (
    <TourContext.Provider
      value={{
        tourIsActive,
        setTourIsActive,
        isHeaderShow,
        setIsHeaderShow,
        steps,
        startTour,
        ref0,
        ref1,
        ref2,
        ref3,
        ref4,
        ref5,
        ref6,
        ref7,
        ref8,
        ref9,
        ref10,
        ref11,
        ref12,
        ref13,
        ref14,
        ref15,
      }}
    >
      {children}
    </TourContext.Provider>
  );
};

export const useTourContext = () => {
  const context = useContext(TourContext);
  if (context === undefined) {
    throw new Error('TourContext must be used within a TourProvider');
  }
  return context;
};

export default TourProvider;
